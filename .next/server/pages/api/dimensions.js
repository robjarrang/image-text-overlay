(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[733],{67:e=>{"use strict";e.exports=require("node:async_hooks")},195:e=>{"use strict";e.exports=require("node:buffer")},615:(e,n,r)=>{"use strict";r.r(n),r.d(n,{default:()=>p}),r(639);var t=r(952),s=r(161),o=r(278);function i(e,n){return e[n]<<24|e[n+1]<<16|e[n+2]<<8|e[n+3]}function a(e,n){return e[n]<<8|e[n+1]}async function u(e){let{searchParams:n}=new URL(e.url),r=n.get("url");if(!r)return new Response(JSON.stringify({error:"No image URL provided"}),{status:400,headers:{"Content-Type":"application/json"}});try{console.log(`Fetching image from URL: ${r}`);let e=await fetch(r);if(!e.ok)throw Error(`Failed to fetch image: ${e.status} ${e.statusText}`);let n=await e.arrayBuffer(),t=new Uint8Array(n);if(137===t[0]&&80===t[1]&&78===t[2]&&71===t[3]){let e=i(t,16),n=i(t,20);return console.log(`Image dimensions: ${e}x${n}`),new Response(JSON.stringify({width:e,height:n}),{status:200,headers:{"Content-Type":"application/json"}})}if(255===t[0]&&216===t[1]){let e=2;for(;e<t.length;){if(255===t[e]&&192===t[e+1]){let n=a(t,e+5),r=a(t,e+7);return console.log(`Image dimensions: ${r}x${n}`),new Response(JSON.stringify({width:r,height:n}),{status:200,headers:{"Content-Type":"application/json"}})}e+=2+a(t,e+2)}}throw Error("Unsupported image format")}catch(n){let e=n instanceof Error?n.message:"An unknown error occurred";return console.error(`Error in dimensions API: ${e}`),new Response(JSON.stringify({error:`Failed to get image dimensions: ${e}`}),{status:500,headers:{"Content-Type":"application/json"}})}}function p(e){return(0,t.C)({...e,IncrementalCache:s.k,page:"/api/dimensions",handler:(0,o.fd)("/api/dimensions",u)})}}},e=>{var n=n=>e(e.s=n);e.O(0,[456],()=>n(615));var r=e.O();(_ENTRIES="undefined"==typeof _ENTRIES?{}:_ENTRIES)["middleware_pages/api/dimensions"]=r}]);
//# sourceMappingURL=dimensions.js.map