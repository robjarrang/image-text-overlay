{"version":3,"file":"pages/api/dimensions.js","mappings":"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","sources":["webpack://_N_E/external commonjs \"node:async_hooks\"","webpack://_N_E/external commonjs \"node:buffer\"","webpack://_N_E/./pages/api/dimensions.ts","webpack://_N_E/?f624"],"sourcesContent":["module.exports = require(\"node:async_hooks\");","module.exports = require(\"node:buffer\");","import { NextRequest } from 'next/server';\n\nexport const config = {\n  runtime: 'edge',\n};\n\nfunction readUInt32BE(buffer: Uint8Array, offset: number): number {\n  return (buffer[offset] << 24) | (buffer[offset + 1] << 16) | (buffer[offset + 2] << 8) | buffer[offset + 3];\n}\n\nfunction readUInt16BE(buffer: Uint8Array, offset: number): number {\n  return (buffer[offset] << 8) | buffer[offset + 1];\n}\n\nexport default async function handler(req: NextRequest) {\n  const { searchParams } = new URL(req.url);\n  const imageUrl = searchParams.get('url');\n\n  if (!imageUrl) {\n    return new Response(JSON.stringify({ error: 'No image URL provided' }), {\n      status: 400,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n\n  try {\n    console.log(`Fetching image from URL: ${imageUrl}`);\n    const response = await fetch(imageUrl);\n    if (!response.ok) {\n      throw new Error(`Failed to fetch image: ${response.status} ${response.statusText}`);\n    }\n    const arrayBuffer = await response.arrayBuffer();\n    const buffer = new Uint8Array(arrayBuffer);\n\n    // Check for PNG signature\n    if (buffer[0] === 0x89 && buffer[1] === 0x50 && buffer[2] === 0x4E && buffer[3] === 0x47) {\n      const width = readUInt32BE(buffer, 16);\n      const height = readUInt32BE(buffer, 20);\n      console.log(`Image dimensions: ${width}x${height}`);\n      return new Response(JSON.stringify({ width, height }), {\n        status: 200,\n        headers: { 'Content-Type': 'application/json' },\n      });\n    }\n\n    // Check for JPEG signature\n    if (buffer[0] === 0xFF && buffer[1] === 0xD8) {\n      let offset = 2;\n      while (offset < buffer.length) {\n        if (buffer[offset] === 0xFF && buffer[offset + 1] === 0xC0) {\n          const height = readUInt16BE(buffer, offset + 5);\n          const width = readUInt16BE(buffer, offset + 7);\n          console.log(`Image dimensions: ${width}x${height}`);\n          return new Response(JSON.stringify({ width, height }), {\n            status: 200,\n            headers: { 'Content-Type': 'application/json' },\n          });\n        }\n        offset += 2 + readUInt16BE(buffer, offset + 2);\n      }\n    }\n\n    throw new Error('Unsupported image format');\n  } catch (error: unknown) {\n    const errorMessage = error instanceof Error ? error.message : 'An unknown error occurred';\n    console.error(`Error in dimensions API: ${errorMessage}`);\n    return new Response(JSON.stringify({ error: `Failed to get image dimensions: ${errorMessage}` }), {\n      status: 500,\n      headers: { 'Content-Type': 'application/json' },\n    });\n  }\n}","\n        import 'next/dist/esm/server/web/globals'\n        import { adapter } from 'next/dist/esm/server/web/adapter'\n        import { IncrementalCache } from 'next/dist/esm/server/lib/incremental-cache'\n        import { wrapApiHandler } from 'next/dist/esm/server/api-utils'\n\n        import handler from \"private-next-pages/api/dimensions.ts\"\n\n        if (typeof handler !== 'function') {\n          throw new Error('The Edge Function \"pages/api/dimensions\" must export a `default` function');\n        }\n\n        export default function nHandler (opts) {\n          return adapter({\n              ...opts,\n              IncrementalCache,\n              page: \"/api/dimensions\",\n              handler: wrapApiHandler(\"/api/dimensions\", handler),\n          })\n        }\n    "],"names":["module","exports","require","readUInt32BE","buffer","offset","readUInt16BE","handler","req","searchParams","URL","url","imageUrl","get","Response","JSON","stringify","error","status","headers","console","log","response","fetch","ok","statusText","arrayBuffer","Uint8Array","width","height","length","errorMessage","Error","message","nHandler","opts","adapter","C","IncrementalCache","incremental_cache","k","page","api_utils","fd"],"sourceRoot":""}